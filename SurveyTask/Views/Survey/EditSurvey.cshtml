@model SurveyTask.Models.SurveyViewModel

@{
    ViewBag.Title = "Edit Survey";
}

<h2>Edit Survey</h2>

@using (Html.BeginForm("EditSurvey", "Survey", FormMethod.Post, new { id="EditForm" }))
{
    <div class="form-group">
        <input hidden id="SurveyId" value="@Model.SurveyId"/>
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", id = "surveyTitle" } })
        </div>
    </div>

    <h3>Edit Questions</h3>
    <div id="questionsContainerEdit">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <div class="form-group">
                <label class="control-label">Question @i</label>
                @Html.TextBoxFor(model => model.Questions.ToList()[i].Text, new { @class = "form-control qustion-text", id= Model.Questions.ToList()[i].QuestionId })
                @Html.ValidationMessageFor(model => model.Questions.ToList()[i].Text, "", new { @class = "text-danger" })

            </div>
        }
    </div>

    <button type="button" id="addQuestionEdit" class="btn btn-primary">Add Another Question</button>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save Changes" class="btn btn-default" />
        </div>
    </div>
}

<script>
        $(document).ready(function () {
            var questionIndex = 0;

            $("#addQuestionEdit").click(function () {

                var questionHtml = `
                    <div class="form-group">
                        <label class="control-label">Question ${questionIndex}</label>
                        <input type="text" name="Questions[${questionIndex}].Text" class="form-control" required />
                        <span class="text-danger" data-valmsg-for="Questions[${questionIndex}].Text"></span>
                    </div>`;

                $("#questionsContainerEdit").append(questionHtml);
                questionIndex++;
            });

            $("#EditForm").submit(function (e) {
                e.preventDefault();
                    var answers = [];
                $(".qustion-text").each(function () {
                    var questionId = $(this).attr('id');
                    var questionText = $(this).val();
                    answers.push({ QuestionId: questionId, QuestionText: questionText });
                });
                debugger
                let answersList = JSON.stringify({ model: { SurveyId: $('#SurveyId').val(), Title: $('#surveyTitle').val(), Questions : answers } });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("EditSurvey", "Survey")",
                    data: answersList,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            alert("Survey successfully.");
                        } else {
                            alert("Error submitting survey.");
                            console.log("Error submitting survey. Errors: " + data.errors.join(", "));
                        }
                    },
                    error: function () {

                        console.log("Error submitting survey.");
                    }
               });
            });


        });
</script>
